# -*- coding: utf-8 -*-

cdef class Constants:

    Proto = make_enum("Constants_Proto", 'Proto', 'Protocols',{
        'PROTO_IP': CSTS_PROTO_IP,
        'PROTO_HOPOPTS': CSTS_PROTO_HOPOPTS,
        'PROTO_ICMP': CSTS_PROTO_ICMP,
        'PROTO_IGMP': CSTS_PROTO_IGMP,
        'PROTO_IPIP': CSTS_PROTO_IPIP,
        'PROTO_TCP': CSTS_PROTO_TCP,
        'PROTO_EGP': CSTS_PROTO_EGP,
        'PROTO_PUP': CSTS_PROTO_PUP,
        'PROTO_UDP': CSTS_PROTO_UDP,
        'PROTO_IDP': CSTS_PROTO_IDP,
        'PROTO_TP': CSTS_PROTO_TP,
        'PROTO_DCCP': CSTS_PROTO_DCCP,
        'PROTO_IPV6': CSTS_PROTO_IPV6,
        'PROTO_ROUTING': CSTS_PROTO_ROUTING,
        'PROTO_FRAGMENT': CSTS_PROTO_FRAGMENT,
        'PROTO_RSVP': CSTS_PROTO_RSVP,
        'PROTO_GRE': CSTS_PROTO_GRE,
        'PROTO_ESP': CSTS_PROTO_ESP,
        'PROTO_AH': CSTS_PROTO_AH,
        'PROTO_ICMPV6': CSTS_PROTO_ICMPV6,
        'PROTO_NONE': CSTS_PROTO_NONE,
        'PROTO_DSTOPTS': CSTS_PROTO_DSTOPTS,
        'PROTO_MTP': CSTS_PROTO_MTP,
        'PROTO_ENCAP': CSTS_PROTO_ENCAP,
        'PROTO_PIM': CSTS_PROTO_PIM,
        'PROTO_COMP': CSTS_PROTO_COMP,
        'PROTO_SCTP': CSTS_PROTO_SCTP,
        'PROTO_UDPLITE': CSTS_PROTO_UDPLITE,
        'PROTO_RAW': CSTS_PROTO_RAW
    })

    Ethernet = make_enum("Constants_Ethernet", 'Ethernet', 'Ethernet packet types', {
        'UNKNOWN': CSTS_ETH_UNKNOWN,
        'SPRITE': CSTS_ETH_SPRITE,
        'IP': CSTS_ETH_IP,
        'ARP': CSTS_ETH_ARP,
        'REVARP': CSTS_ETH_REVARP,
        'AT': CSTS_ETH_AT,
        'AARP': CSTS_ETH_AARP,
        'VLAN': CSTS_ETH_VLAN,
        'IPX': CSTS_ETH_IPX,
        'IPV6': CSTS_ETH_IPV6,
        'PPPOED': CSTS_ETH_PPPOED,
        'PPPOES': CSTS_ETH_PPPOES,
        'EAPOL': CSTS_ETH_EAPOL,
        'LOOPBACK': CSTS_ETH_LOOPBACK,
    })

    ARP = make_enum("ConstantsARP", 'ARP', 'ARP constants', {
        'NETROM': CSTS_ARP_NETROM,
        'ETHER': CSTS_ARP_ETHER,
        'EETHER': CSTS_ARP_EETHER,
        'AX25': CSTS_ARP_AX25,
        'PRONET': CSTS_ARP_PRONET,
        'CHAOS': CSTS_ARP_CHAOS,
        'IEEE802': CSTS_ARP_IEEE802,
        'ARCNET': CSTS_ARP_ARCNET,
        'APPLETLK': CSTS_ARP_APPLETLK,
        'DLCI': CSTS_ARP_DLCI,
        'ATM': CSTS_ARP_ATM,
        'METRICOM': CSTS_ARP_METRICOM,
        'IEEE1394': CSTS_ARP_IEEE1394,
        'EUI64': CSTS_ARP_EUI64,
        'INFINIBAND': CSTS_ARP_INFINIBAND,
        'SLIP': CSTS_ARP_SLIP,
        'CSLIP': CSTS_ARP_CSLIP,
        'SLIP6': CSTS_ARP_SLIP6,
        'CSLIP6': CSTS_ARP_CSLIP6,
        'RSRVD': CSTS_ARP_RSRVD,
        'ADAPT': CSTS_ARP_ADAPT,
        'ROSE': CSTS_ARP_ROSE,
        'X25': CSTS_ARP_X25,
        'HWX25': CSTS_ARP_HWX25,
        'PPP': CSTS_ARP_PPP,
        'CISCO': CSTS_ARP_CISCO,
        'HDLC': CSTS_ARP_HDLC,
        'LAPB': CSTS_ARP_LAPB,
        'DDCMP': CSTS_ARP_DDCMP,
        'RAWHDLC': CSTS_ARP_RAWHDLC,
        'TUNNEL': CSTS_ARP_TUNNEL,
        'TUNNEL6': CSTS_ARP_TUNNEL6,
        'FRAD': CSTS_ARP_FRAD,
        'SKIP': CSTS_ARP_SKIP,
        'LOOPBACK': CSTS_ARP_LOOPBACK,
        'LOCALTLK': CSTS_ARP_LOCALTLK,
        'FDDI': CSTS_ARP_FDDI,
        'BIF': CSTS_ARP_BIF,
        'SIT': CSTS_ARP_SIT,
        'IPDDP': CSTS_ARP_IPDDP,
        'IPGRE': CSTS_ARP_IPGRE,
        'PIMREG': CSTS_ARP_PIMREG,
        'HIPPI': CSTS_ARP_HIPPI,
        'ASH': CSTS_ARP_ASH,
        'ECONET': CSTS_ARP_ECONET,
        'IRDA': CSTS_ARP_IRDA,
        'FCPP': CSTS_ARP_FCPP,
        'FCAL': CSTS_ARP_FCAL,
        'FCPL': CSTS_ARP_FCPL,
        'FCFABRIC': CSTS_ARP_FCFABRIC,
        'IEEE802_TR': CSTS_ARP_IEEE802_TR,
        'IEEE80211': CSTS_ARP_IEEE80211,
        'IEEE80211_PRISM': CSTS_ARP_IEEE80211_PRISM,
        'IEEE80211_RADIOTAP': CSTS_ARP_IEEE80211_RADIOTAP,
        'IEEE802154': CSTS_ARP_IEEE802154,
        'IEEE802154_PHY': CSTS_ARP_IEEE802154_PHY,
        'VOID_TYPE': CSTS_ARP_VOID_TYPE,
        'NONE': CSTS_ARP_NONE
    })
